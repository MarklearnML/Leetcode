class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {       // 排序+双指针  固定一个另外两个双指针
        sort(nums.begin(), nums.end());
        vector<vector<int>> ans;
        int left=1,right=nums.size()-1;
        for(int i=0;i<nums.size();i++){
            if (nums[i] > 0) {              // 剪枝
                return ans;
            }
            if (i > 0 && nums[i] == nums[i - 1]) {      // 去重
                continue;
            }
            left=i+1;
            right=nums.size()-1;
            while(left<right){
                if(nums[i]+nums[left]+nums[right]<0){
                    left++;
                }
                else if(nums[i]+nums[left]+nums[right]>0){
                    right--;
                }
                else{
                    ans.push_back({nums[i], nums[left], nums[right]});
                    while (right > left && nums[right] == nums[right - 1]) right--;     // 去重
                    while (right > left && nums[left] == nums[left + 1]) left++;        // 去重
                    right--;
                    left++;
                }
            }
        }
        return ans;
    }
};
