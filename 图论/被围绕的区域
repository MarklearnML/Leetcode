class Solution {
public:
    void dfs(vector<vector<char>>& board, vector<vector<bool>>& used, int i, int j){
        used[i][j]=true;
        if(i>0&&board[i-1][j]=='O'&&used[i-1][j]==false) dfs(board, used, i-1, j);
        if(i<board.size()-1&&board[i+1][j]=='O'&&used[i+1][j]==false) dfs(board, used, i+1, j);
        if(j>0&&board[i][j-1]=='O'&&used[i][j-1]==false) dfs(board, used, i, j-1);
        if(j<board[0].size()-1&&board[i][j+1]=='O'&&used[i][j+1]==false) dfs(board, used, i, j+1);
    }
    void solve(vector<vector<char>>& board) {
        vector<vector<bool>> used(board.size(), vector<bool>(board[0].size(), false));
        for(int i=0;i<board.size();i++){
            if(board[i][0]=='O'&&used[i][0]==false) dfs(board, used, i, 0);
            if(board[i][board[0].size()-1]=='O'&&used[i][board[0].size()-1]==false) dfs(board, used, i, board[0].size()-1);
        }

        for(int j=0;j<board[0].size();j++){
            if(board[0][j]=='O'&&used[0][j]==false) dfs(board, used, 0, j);
            if(board[board.size()-1][j]=='O'&&used[board.size()-1][j]==false) dfs(board, used, board.size()-1, j);
        }

        for(int i=1;i<board.size()-1;i++){
            for(int j=1;j<board[0].size()-1;j++){
                if(board[i][j]=='O'&&used[i][j]==false) board[i][j]='X';
            }
        }
    }
};
