class Solution {
public:
    int monotoneIncreasingDigits(int n) {
        long long k=1;
        int result=0;
        while((n/k)!=0){
            k=k*10;
        }
        k/=10;
        long long token=k;
        while(k>=1){
            int j=(n/k);
            n%=k;
            k/=10;
            if(k==0||j<n/k){
                while(token!=k){
                    result+=j*token;
                    token/=10;
                }
            }
            else if(j>n/k){
                result+=(j-1)*token;
                while(token>1){
                    token/=10;
                    result+=9*token;
                }
                break;
            }
        }
        return result;
    }
};
