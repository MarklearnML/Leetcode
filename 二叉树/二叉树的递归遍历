/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {      
public:
    void travel(vector<int> &v, TreeNode* t){    // 前序遍历
        if(t==NULL) return;
        v.push_back(t->val);
        travel(v, t->left);
        travel(v, t->right);
    }

    void travel(vector<int> &v, TreeNode* t){  // 后序遍历
        if(t==NULL) return;
        travel(v, t->left);
        travel(v, t->right);
        v.push_back(t->val);
    }

    void travel(vector<int> &v, TreeNode* t){  // 中序遍历
        if(t==NULL) return;
        travel(v, t->left);
        v.push_back(t->val);
        travel(v, t->right);
    }

    vector<int> preorderTraversal(TreeNode* root) {
        vector<int> result;
        travel(result, root);
        return result;
    }
};
