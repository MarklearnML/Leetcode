class Solution {
public:
    vector<vector<int>> insert(vector<vector<int>>& intervals, vector<int>& newInterval) {
        int n=intervals.size();
        int left=0, right=n-1;
        int mid;
        if(n==0) return {newInterval};
        if(n==1&&intervals[left][0]<=newInterval[0]) left++; 
        while(left<=right){
            mid=(left+right)/2;
            if(intervals[mid][0]<=newInterval[0]){
                left=mid+1;
            }
            else{
                right=mid-1;
            }
        }
        intervals.insert(intervals.begin()+left, newInterval);
        vector<vector<int>> result;
        result.push_back(intervals[0]);
        for(int i=1;i<intervals.size();i++){
            if(intervals[i][0]<=result[result.size()-1][1]){
                result[result.size()-1][1]=max(intervals[i][1], result[result.size()-1][1]);
            }
            else{
                result.push_back(intervals[i]);
            }
        }
        return result;
    }
};
