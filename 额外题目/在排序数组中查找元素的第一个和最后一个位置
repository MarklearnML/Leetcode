class Solution {
public:
    vector<int> searchRange(vector<int>& nums, int target) {
        int left=0;
        int right=nums.size()-1;
        vector<int> result(2, -1);
        while(left<=right){         //  二分查找找到target位置
            int mid=(left+right)/2;
            if(target>nums[mid]){
                left=mid+1;
            }
            else if(target<nums[mid]){
                right=mid-1;
            }
            else{               // 找到target位置后 从mid两边更新左右边界
                left=mid;
                right=mid;
                while(left>=0&&nums[left]==target||right<nums.size()&&nums[right]==target){
                    if(left>=0&&nums[left]==target) result[0]=left;
                    if(right<nums.size()&&nums[right]==target) result[1]=right;
                    left--;
                    right++; 
                }
                break;
            }
        }
        return result;
    }
};
