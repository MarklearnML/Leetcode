class Solution {
public:
    bool isSubsequence(string s, string t) {        // 动态规划
        vector<vector<int>> dp(s.size() + 1, vector<int>(t.size() + 1, 0));
        for (int i = 1; i <= s.size(); i++) {
            for (int j = 1; j <= t.size(); j++) {
                if (s[i - 1] == t[j - 1]) dp[i][j] = dp[i - 1][j - 1] + 1;
                else dp[i][j] = dp[i][j - 1];
            }
        }
        if (dp[s.size()][t.size()] == s.size()) return true;
        return false;
    }
};


class Solution {
public:
    bool isSubsequence(string s, string t) {    // 双指针
        int left=0, right=0;
        while(right<t.size()){
            if(s[left]==t[right]){
                left++;
                right++;
            }
            else{
                right++;
            }
        }
        if(left==s.size()) return true;
        else return false;
    }
};
